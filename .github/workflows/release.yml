name: Firmware Release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: ${{ runner.os }}-pio

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
            python-version: '3.11'

      - name: Install PlatformIO Core
        run: pip install --upgrade platformio

      - name: Extract build version
        id: get_version
        uses: battila7/get-version-action@v2

      - name: Run PlatformIO
        env:
          VERSION: ${{ steps.get_version.outputs.version-without-v }}
        run: pio run

      - name: Prepare Release Assets
        run: |
          #!/bin/bash
          set -e
          echo "Renaming bin files with the environment name"
          rename -v 's:/:-:g' .pio/build/*/*.bin
          mkdir toDeploy
          rename 's/.pio-build-//' .*.bin
          
          (
            cd lib
            echo "Replacing space by _ in folder names"
            find . -type d -name "* *" | while read FNAME; do mv "$FNAME" "${FNAME// /_}"; done
            echo "Zipping libraries per board"
            for i in */
            do
              zip -r "${i%/}-libraries.zip" "$i"
            done
            mv *.zip ../toDeploy
          )
          
          # Remove binaries for *-all*, *-test* env and only zip containing *-test*
          rm -f *-all*.bin *-test*.bin *-test*.zip
          echo "Zipping source code"
          zip -r Sources.zip src
          mv *.zip toDeploy
          mv *.bin toDeploy
          
          ls -lA toDeploy

      - name: Upload Release Assets
        uses: actions/upload-artifact@v4
        with:
          name: release-assets
          path: toDeploy/**
          
      - name: Get upload url
        id: release-id
        run: |
          RELEASE_ID=$(jq --raw-output '.release.id' $GITHUB_EVENT_PATH)
          echo "::set-output name=upload_url::https://uploads.github.com/repos/${GITHUB_REPOSITORY}/releases/${RELEASE_ID}/assets{?name,label}"
          
      - name: Finalize Release
        uses: softprops/action-gh-release@v1
        with:
          files: toDeploy/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
